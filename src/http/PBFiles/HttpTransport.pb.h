// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: HttpTransport.proto
// Protobuf C++ Version: 5.27.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_HttpTransport_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_HttpTransport_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_HttpTransport_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_HttpTransport_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_HttpTransport_2eproto;
namespace PHM {
class request;
struct requestDefaultTypeInternal;
extern requestDefaultTypeInternal _request_default_instance_;
class response;
struct responseDefaultTypeInternal;
extern responseDefaultTypeInternal _response_default_instance_;
}  // namespace PHM
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace PHM {
enum cmd : int {
  register_ = 0,
  login = 1,
  cmd_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  cmd_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool cmd_IsValid(int value);
extern const uint32_t cmd_internal_data_[];
constexpr cmd cmd_MIN = static_cast<cmd>(0);
constexpr cmd cmd_MAX = static_cast<cmd>(1);
constexpr int cmd_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
cmd_descriptor();
template <typename T>
const std::string& cmd_Name(T value) {
  static_assert(std::is_same<T, cmd>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to cmd_Name().");
  return cmd_Name(static_cast<cmd>(value));
}
template <>
inline const std::string& cmd_Name(cmd value) {
  return ::google::protobuf::internal::NameOfDenseEnum<cmd_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool cmd_Parse(absl::string_view name, cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<cmd>(
      cmd_descriptor(), name, value);
}
enum code : int {
  success = 0,
  failed = 1,
  code_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  code_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool code_IsValid(int value);
extern const uint32_t code_internal_data_[];
constexpr code code_MIN = static_cast<code>(0);
constexpr code code_MAX = static_cast<code>(1);
constexpr int code_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
code_descriptor();
template <typename T>
const std::string& code_Name(T value) {
  static_assert(std::is_same<T, code>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to code_Name().");
  return code_Name(static_cast<code>(value));
}
template <>
inline const std::string& code_Name(code value) {
  return ::google::protobuf::internal::NameOfDenseEnum<code_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool code_Parse(absl::string_view name, code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<code>(
      code_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PHM.response) */ {
 public:
  inline response() : response(nullptr) {}
  ~response() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR response(
      ::google::protobuf::internal::ConstantInitialized);

  inline response(const response& from) : response(nullptr, from) {}
  inline response(response&& from) noexcept
      : response(nullptr, std::move(from)) {}
  inline response& operator=(const response& from) {
    CopyFrom(from);
    return *this;
  }
  inline response& operator=(response&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const response& default_instance() {
    return *internal_default_instance();
  }
  static inline const response* internal_default_instance() {
    return reinterpret_cast<const response*>(
        &_response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(response& a, response& b) { a.Swap(&b); }
  inline void Swap(response* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const response& from) { response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(response* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "PHM.response"; }

 protected:
  explicit response(::google::protobuf::Arena* arena);
  response(::google::protobuf::Arena* arena, const response& from);
  response(::google::protobuf::Arena* arena, response&& from) noexcept
      : response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgFieldNumber = 3,
    kPayloadFieldNumber = 4,
    kCmdFieldNumber = 1,
    kCodeFieldNumber = 2,
  };
  // string msg = 3;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // .google.protobuf.Any payload = 4;
  bool has_payload() const;
  void clear_payload() ;
  const ::google::protobuf::Any& payload() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_payload();
  ::google::protobuf::Any* mutable_payload();
  void set_allocated_payload(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_payload(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_payload();

  private:
  const ::google::protobuf::Any& _internal_payload() const;
  ::google::protobuf::Any* _internal_mutable_payload();

  public:
  // .PHM.cmd cmd = 1;
  void clear_cmd() ;
  ::PHM::cmd cmd() const;
  void set_cmd(::PHM::cmd value);

  private:
  ::PHM::cmd _internal_cmd() const;
  void _internal_set_cmd(::PHM::cmd value);

  public:
  // .PHM.code code = 2;
  void clear_code() ;
  ::PHM::code code() const;
  void set_code(::PHM::code value);

  private:
  ::PHM::code _internal_code() const;
  void _internal_set_code(::PHM::code value);

  public:
  // @@protoc_insertion_point(class_scope:PHM.response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      24, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_response_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const response& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::google::protobuf::Any* payload_;
    int cmd_;
    int code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_HttpTransport_2eproto;
};
// -------------------------------------------------------------------

class request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PHM.request) */ {
 public:
  inline request() : request(nullptr) {}
  ~request() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR request(
      ::google::protobuf::internal::ConstantInitialized);

  inline request(const request& from) : request(nullptr, from) {}
  inline request(request&& from) noexcept
      : request(nullptr, std::move(from)) {}
  inline request& operator=(const request& from) {
    CopyFrom(from);
    return *this;
  }
  inline request& operator=(request&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const request& default_instance() {
    return *internal_default_instance();
  }
  static inline const request* internal_default_instance() {
    return reinterpret_cast<const request*>(
        &_request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(request& a, request& b) { a.Swap(&b); }
  inline void Swap(request* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const request& from) { request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(request* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "PHM.request"; }

 protected:
  explicit request(::google::protobuf::Arena* arena);
  request(::google::protobuf::Arena* arena, const request& from);
  request(::google::protobuf::Arena* arena, request&& from) noexcept
      : request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPayloadFieldNumber = 2,
    kCmdFieldNumber = 1,
  };
  // .google.protobuf.Any payload = 2;
  bool has_payload() const;
  void clear_payload() ;
  const ::google::protobuf::Any& payload() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_payload();
  ::google::protobuf::Any* mutable_payload();
  void set_allocated_payload(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_payload(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_payload();

  private:
  const ::google::protobuf::Any& _internal_payload() const;
  ::google::protobuf::Any* _internal_mutable_payload();

  public:
  // .PHM.cmd cmd = 1;
  void clear_cmd() ;
  ::PHM::cmd cmd() const;
  void set_cmd(::PHM::cmd value);

  private:
  ::PHM::cmd _internal_cmd() const;
  void _internal_set_cmd(::PHM::cmd value);

  public:
  // @@protoc_insertion_point(class_scope:PHM.request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_request_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Any* payload_;
    int cmd_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_HttpTransport_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// request

// .PHM.cmd cmd = 1;
inline void request::clear_cmd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cmd_ = 0;
}
inline ::PHM::cmd request::cmd() const {
  // @@protoc_insertion_point(field_get:PHM.request.cmd)
  return _internal_cmd();
}
inline void request::set_cmd(::PHM::cmd value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:PHM.request.cmd)
}
inline ::PHM::cmd request::_internal_cmd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::PHM::cmd>(_impl_.cmd_);
}
inline void request::_internal_set_cmd(::PHM::cmd value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cmd_ = value;
}

// .google.protobuf.Any payload = 2;
inline bool request::has_payload() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.payload_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& request::_internal_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.payload_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& request::payload() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PHM.request.payload)
  return _internal_payload();
}
inline void request::unsafe_arena_set_allocated_payload(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }
  _impl_.payload_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PHM.request.payload)
}
inline ::google::protobuf::Any* request::release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* released = _impl_.payload_;
  _impl_.payload_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Any* request::unsafe_arena_release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PHM.request.payload)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* temp = _impl_.payload_;
  _impl_.payload_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* request::_internal_mutable_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.payload_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.payload_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.payload_;
}
inline ::google::protobuf::Any* request::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Any* _msg = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:PHM.request.payload)
  return _msg;
}
inline void request::set_allocated_payload(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.payload_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:PHM.request.payload)
}

// -------------------------------------------------------------------

// response

// .PHM.cmd cmd = 1;
inline void response::clear_cmd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cmd_ = 0;
}
inline ::PHM::cmd response::cmd() const {
  // @@protoc_insertion_point(field_get:PHM.response.cmd)
  return _internal_cmd();
}
inline void response::set_cmd(::PHM::cmd value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:PHM.response.cmd)
}
inline ::PHM::cmd response::_internal_cmd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::PHM::cmd>(_impl_.cmd_);
}
inline void response::_internal_set_cmd(::PHM::cmd value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cmd_ = value;
}

// .PHM.code code = 2;
inline void response::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0;
}
inline ::PHM::code response::code() const {
  // @@protoc_insertion_point(field_get:PHM.response.code)
  return _internal_code();
}
inline void response::set_code(::PHM::code value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:PHM.response.code)
}
inline ::PHM::code response::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::PHM::code>(_impl_.code_);
}
inline void response::_internal_set_code(::PHM::code value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// string msg = 3;
inline void response::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& response::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PHM.response.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void response::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PHM.response.msg)
}
inline std::string* response::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:PHM.response.msg)
  return _s;
}
inline const std::string& response::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void response::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* response::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* response::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PHM.response.msg)
  return _impl_.msg_.Release();
}
inline void response::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PHM.response.msg)
}

// .google.protobuf.Any payload = 4;
inline bool response::has_payload() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.payload_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& response::_internal_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.payload_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& response::payload() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PHM.response.payload)
  return _internal_payload();
}
inline void response::unsafe_arena_set_allocated_payload(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }
  _impl_.payload_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PHM.response.payload)
}
inline ::google::protobuf::Any* response::release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* released = _impl_.payload_;
  _impl_.payload_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Any* response::unsafe_arena_release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PHM.response.payload)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* temp = _impl_.payload_;
  _impl_.payload_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* response::_internal_mutable_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.payload_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.payload_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.payload_;
}
inline ::google::protobuf::Any* response::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Any* _msg = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:PHM.response.payload)
  return _msg;
}
inline void response::set_allocated_payload(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.payload_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:PHM.response.payload)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace PHM


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::PHM::cmd> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::PHM::cmd>() {
  return ::PHM::cmd_descriptor();
}
template <>
struct is_proto_enum<::PHM::code> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::PHM::code>() {
  return ::PHM::code_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_HttpTransport_2eproto_2epb_2eh
